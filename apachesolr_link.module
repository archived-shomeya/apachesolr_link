<?php

/**
 * @file
 * Provides support for indexing the destination of link fields with the Apache
 * Solr module.
 */

/**
 * Implements hook_menu().
 */
function apachesolr_link_menu() {
  $items = array();

  $items['admin/config/search/apachesolr_link'] = array(
    'title' => 'Apache Solr Link settings',
    'description' => 'Configure how link fields should be indexed by Apache Solr.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('apachesolr_link_settings_form'),
    'access arguments' => array('administer search'),
  );

  return $items;
}

/**
 * Implements hook_apachesolr_field_mappings().
 */
function apachesolr_link_apachesolr_field_mappings() {
  $mappings = array(
    'link_field' => array(
      'indexing_callback' => 'apachesolr_link_fields_default_link_callback',
      'index_type' => 'text',
      'query types' => array('term'),
      'query type' => 'term',
    ),
  );
  return $mappings;
}

/**
 * Callback that converts link fields into URL text.
 */
function apachesolr_link_fields_default_link_callback($entity, $field_name, $index_key, $field_info) {
  $settings = variable_get('apachesolr_link_indexed_fields', array());

  $fields = array();
  foreach ($settings as $enabled_field_name) {
    // Check to see if this field is enabled.
    if ($enabled_field_name && $field_name === $enabled_field_name) {
      if (!empty($entity->{$field_name})) {
        $field = $entity->$field_name;
        list($lang, $values) = each($field);
        for ($i = 0; $i < count($values); $i++) {
          $fields[] = array(
            'key' => $index_key,
            'value' => apachesolr_link_fetch_url_contents($values[$i]['url']),
          );
        }
      }
    }
  }

  return $fields;
}

/**
 * Form builder for settings form.
 */
function apachesolr_link_settings_form($form, &$form_state) {
  $fields = field_info_fields();
  $options = array();
  foreach ($fields as $field) {
    if ($field['type'] === 'link_field') {
      $options[$field['field_name']] = $field['field_name'];
    }
  }

  $form['apachesolr_link_indexed_fields'] = array(
    '#type' => 'checkboxes',
    '#title' => 'Select fields that should have their link destinations indexed',
    '#options' => $options,
    '#default_value' => variable_get('apachesolr_link_indexed_fields', array()),
  );

  return system_settings_form($form);
}

/**
 * Return the cleaned version of the content of a URL.
 */
function apachesolr_link_fetch_url_contents($url) {
  $text = '';
  $abs_url = url($url, array('absolute' => TRUE));
  $response = drupal_http_request($abs_url);
  if (empty($response->error)) {
    $text = apachesolr_clean_text($response->data);
  }
  return $text;
}

/**
 * Implements hook_apachesolr_index_document_build_ENTITY_TYPE().
 */
function apachesolr_link_apachesolr_index_document_build_node(ApacheSolrDocument $document, $entity, $env_id) {
  $settings = variable_get('apachesolr_link_indexed_fields', array());

  $enabled_fields = array();
  foreach ($settings as $enabled_field_name) {
    // Check to see if this field is enabled.
    if ($enabled_field_name) {
      $enabled_fields[] = $enabled_field_name;
    }
  }

  foreach (apachesolr_entity_fields() as $field_name => $field) {
    if (in_array($field['name'], $enabled_fields)) {
      $solr_field = $document->getField($field_name);
      foreach ($solr_field['value'] as $value) {
        $document->setMultiValue('tm_apachesolr_link_content', $value);
      }
    }
  }
}

/**
 * Implement hook_apachesolr_query_prepare().
 */
function apachesolr_link_apachesolr_query_prepare(DrupalSolrQueryInterface $current_query) {
  $current_query->addParam('qf', 'tm_apachesolr_link_content');
}
